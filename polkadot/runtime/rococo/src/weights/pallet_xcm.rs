// Copyright (C) Parity Technologies (UK) Ltd.
// This file is part of Polkadot.

// Polkadot is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Polkadot is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Polkadot.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_xcm`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
<<<<<<< HEAD
//! DATE: 2024-02-20, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2024-12-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `65a7f4d3191f`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("rococo-dev")`, DB CACHE: 1024

// Executed Command:
// target/production/polkadot
// benchmark
// pallet
<<<<<<< HEAD
// --steps=50
// --repeat=20
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --json-file=/builds/parity/mirrors/polkadot-sdk/.git/.artifacts/bench.json
// --pallet=pallet_xcm
// --chain=rococo-dev
// --header=./polkadot/file_header.txt
// --output=./polkadot/runtime/rococo/src/weights/
=======
// --extrinsic=*
// --chain=rococo-dev
// --pallet=pallet_xcm
// --header=/__w/polkadot-sdk/polkadot-sdk/polkadot/file_header.txt
// --output=./polkadot/runtime/rococo/src/weights
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --heap-pages=4096
// --no-storage-info
// --no-min-squares
// --no-median-slopes
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_xcm`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_xcm::WeightInfo for WeightInfo<T> {
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn send() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 25_043_000 picoseconds.
		Weight::from_parts(25_682_000, 0)
			.saturating_add(Weight::from_parts(0, 3645))
			.saturating_add(T::DbWeight::get().reads(4))
=======
		//  Measured:  `245`
		//  Estimated: `3710`
		// Minimum execution time: 37_787_000 picoseconds.
		Weight::from_parts(39_345_000, 0)
			.saturating_add(Weight::from_parts(0, 3710))
			.saturating_add(T::DbWeight::get().reads(5))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
	/// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn teleport_assets() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 107_570_000 picoseconds.
		Weight::from_parts(109_878_000, 0)
			.saturating_add(Weight::from_parts(0, 3645))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Measured:  `245`
		//  Estimated: `3710`
		// Minimum execution time: 138_755_000 picoseconds.
		Weight::from_parts(142_908_000, 0)
			.saturating_add(Weight::from_parts(0, 3710))
			.saturating_add(T::DbWeight::get().reads(7))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
	/// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn reserve_transfer_assets() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `232`
		//  Estimated: `3697`
		// Minimum execution time: 106_341_000 picoseconds.
		Weight::from_parts(109_135_000, 0)
			.saturating_add(Weight::from_parts(0, 3697))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Measured:  `297`
		//  Estimated: `3762`
		// Minimum execution time: 134_917_000 picoseconds.
		Weight::from_parts(138_809_000, 0)
			.saturating_add(Weight::from_parts(0, 3762))
			.saturating_add(T::DbWeight::get().reads(7))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
	/// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer_assets() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 108_372_000 picoseconds.
		Weight::from_parts(112_890_000, 0)
			.saturating_add(Weight::from_parts(0, 3645))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Measured:  `245`
		//  Estimated: `3710`
		// Minimum execution time: 141_303_000 picoseconds.
		Weight::from_parts(144_640_000, 0)
			.saturating_add(Weight::from_parts(0, 3710))
			.saturating_add(T::DbWeight::get().reads(7))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
	/// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn execute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
<<<<<<< HEAD
		//  Estimated: `0`
		// Minimum execution time: 6_957_000 picoseconds.
		Weight::from_parts(7_417_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
=======
		//  Estimated: `1485`
		// Minimum execution time: 9_872_000 picoseconds.
		Weight::from_parts(10_402_000, 0)
			.saturating_add(Weight::from_parts(0, 1485))
			.saturating_add(T::DbWeight::get().reads(1))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
	}
	/// Storage: `XcmPallet::SupportedVersion` (r:0 w:1)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_xcm_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 7_053_000 picoseconds.
		Weight::from_parts(7_462_000, 0)
=======
		// Minimum execution time: 8_312_000 picoseconds.
		Weight::from_parts(8_867_000, 0)
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn force_default_xcm_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_918_000 picoseconds.
		Weight::from_parts(2_037_000, 0)
=======
		// Minimum execution time: 2_524_000 picoseconds.
		Weight::from_parts(2_800_000, 0)
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(Weight::from_parts(0, 0))
	}
	/// Storage: `XcmPallet::VersionNotifiers` (r:1 w:1)
	/// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::QueryCounter` (r:1 w:1)
	/// Proof: `XcmPallet::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::Queries` (r:0 w:1)
	/// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_subscribe_version_notify() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `180`
		//  Estimated: `3645`
		// Minimum execution time: 30_417_000 picoseconds.
		Weight::from_parts(31_191_000, 0)
			.saturating_add(Weight::from_parts(0, 3645))
			.saturating_add(T::DbWeight::get().reads(6))
=======
		//  Measured:  `245`
		//  Estimated: `3710`
		// Minimum execution time: 45_426_000 picoseconds.
		Weight::from_parts(48_021_000, 0)
			.saturating_add(Weight::from_parts(0, 3710))
			.saturating_add(T::DbWeight::get().reads(7))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `XcmPallet::VersionNotifiers` (r:1 w:1)
	/// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
	/// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::Queries` (r:0 w:1)
	/// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_unsubscribe_version_notify() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `360`
		//  Estimated: `3825`
		// Minimum execution time: 36_666_000 picoseconds.
		Weight::from_parts(37_779_000, 0)
			.saturating_add(Weight::from_parts(0, 3825))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Measured:  `425`
		//  Estimated: `3890`
		// Minimum execution time: 50_854_000 picoseconds.
		Weight::from_parts(52_044_000, 0)
			.saturating_add(Weight::from_parts(0, 3890))
			.saturating_add(T::DbWeight::get().reads(6))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `XcmPallet::XcmExecutionSuspended` (r:0 w:1)
	/// Proof: `XcmPallet::XcmExecutionSuspended` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn force_suspension() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
<<<<<<< HEAD
		// Minimum execution time: 1_869_000 picoseconds.
		Weight::from_parts(2_003_000, 0)
=======
		// Minimum execution time: 2_566_000 picoseconds.
		Weight::from_parts(2_771_000, 0)
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcmPallet::SupportedVersion` (r:6 w:2)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn migrate_supported_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `22`
<<<<<<< HEAD
		//  Estimated: `13387`
		// Minimum execution time: 16_188_000 picoseconds.
		Weight::from_parts(16_435_000, 0)
			.saturating_add(Weight::from_parts(0, 13387))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Estimated: `15862`
		// Minimum execution time: 21_854_000 picoseconds.
		Weight::from_parts(22_528_000, 0)
			.saturating_add(Weight::from_parts(0, 15862))
			.saturating_add(T::DbWeight::get().reads(6))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcmPallet::VersionNotifiers` (r:6 w:2)
	/// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn migrate_version_notifiers() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `26`
<<<<<<< HEAD
		//  Estimated: `13391`
		// Minimum execution time: 16_431_000 picoseconds.
		Weight::from_parts(16_935_000, 0)
			.saturating_add(Weight::from_parts(0, 13391))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Estimated: `15866`
		// Minimum execution time: 21_821_000 picoseconds.
		Weight::from_parts(22_368_000, 0)
			.saturating_add(Weight::from_parts(0, 15866))
			.saturating_add(T::DbWeight::get().reads(6))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcmPallet::VersionNotifyTargets` (r:7 w:0)
	/// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn already_notified_target() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `40`
<<<<<<< HEAD
		//  Estimated: `15880`
		// Minimum execution time: 18_460_000 picoseconds.
		Weight::from_parts(18_885_000, 0)
			.saturating_add(Weight::from_parts(0, 15880))
			.saturating_add(T::DbWeight::get().reads(6))
=======
		//  Estimated: `18355`
		// Minimum execution time: 25_795_000 picoseconds.
		Weight::from_parts(26_284_000, 0)
			.saturating_add(Weight::from_parts(0, 18355))
			.saturating_add(T::DbWeight::get().reads(7))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
	}
	/// Storage: `XcmPallet::VersionNotifyTargets` (r:2 w:1)
	/// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:0)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn notify_current_targets() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `216`
		//  Estimated: `6156`
		// Minimum execution time: 29_623_000 picoseconds.
		Weight::from_parts(30_661_000, 0)
			.saturating_add(Weight::from_parts(0, 6156))
=======
		//  Measured:  `244`
		//  Estimated: `6184`
		// Minimum execution time: 33_182_000 picoseconds.
		Weight::from_parts(34_506_000, 0)
			.saturating_add(Weight::from_parts(0, 6184))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcmPallet::VersionNotifyTargets` (r:5 w:0)
	/// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn notify_target_migration_fail() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `69`
		//  Estimated: `10959`
		// Minimum execution time: 12_043_000 picoseconds.
		Weight::from_parts(12_360_000, 0)
			.saturating_add(Weight::from_parts(0, 10959))
			.saturating_add(T::DbWeight::get().reads(4))
=======
		//  Measured:  `40`
		//  Estimated: `13405`
		// Minimum execution time: 17_573_000 picoseconds.
		Weight::from_parts(18_154_000, 0)
			.saturating_add(Weight::from_parts(0, 13405))
			.saturating_add(T::DbWeight::get().reads(5))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
	}
	/// Storage: `XcmPallet::VersionNotifyTargets` (r:6 w:2)
	/// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn migrate_version_notify_targets() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `33`
<<<<<<< HEAD
		//  Estimated: `13398`
		// Minimum execution time: 16_511_000 picoseconds.
		Weight::from_parts(17_011_000, 0)
			.saturating_add(Weight::from_parts(0, 13398))
			.saturating_add(T::DbWeight::get().reads(5))
=======
		//  Estimated: `15873`
		// Minimum execution time: 22_491_000 picoseconds.
		Weight::from_parts(22_793_000, 0)
			.saturating_add(Weight::from_parts(0, 15873))
			.saturating_add(T::DbWeight::get().reads(6))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcmPallet::VersionNotifyTargets` (r:6 w:1)
	/// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
	/// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
	/// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Dmp::DownwardMessageQueues` (r:1 w:0)
	/// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Paras::Heads` (r:1 w:0)
	/// Proof: `Paras::Heads` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn migrate_and_notify_old_targets() -> Weight {
		// Proof Size summary in bytes:
<<<<<<< HEAD
		//  Measured:  `216`
		//  Estimated: `13581`
		// Minimum execution time: 39_041_000 picoseconds.
		Weight::from_parts(39_883_000, 0)
			.saturating_add(Weight::from_parts(0, 13581))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(4))
=======
		//  Measured:  `244`
		//  Estimated: `16084`
		// Minimum execution time: 44_441_000 picoseconds.
		Weight::from_parts(45_782_000, 0)
			.saturating_add(Weight::from_parts(0, 16084))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(1))
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
	}
	/// Storage: `XcmPallet::QueryCounter` (r:1 w:1)
	/// Proof: `XcmPallet::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::Queries` (r:0 w:1)
	/// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn new_query() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1485`
<<<<<<< HEAD
		// Minimum execution time: 2_030_000 picoseconds.
		Weight::from_parts(2_150_000, 0)
=======
		// Minimum execution time: 2_809_000 picoseconds.
		Weight::from_parts(2_960_000, 0)
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(Weight::from_parts(0, 1485))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `XcmPallet::Queries` (r:1 w:1)
	/// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn take_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7576`
		//  Estimated: `11041`
<<<<<<< HEAD
		// Minimum execution time: 22_615_000 picoseconds.
		Weight::from_parts(23_008_000, 0)
=======
		// Minimum execution time: 26_248_000 picoseconds.
		Weight::from_parts(26_996_000, 0)
>>>>>>> 9da3394c (`pallet_xcm::execute` weights (#6919))
			.saturating_add(Weight::from_parts(0, 11041))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
	/// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `XcmPallet::AssetTraps` (r:1 w:1)
	/// Proof: `XcmPallet::AssetTraps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn claim_assets() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `23`
		//  Estimated: `3488`
		// Minimum execution time: 40_299_000 picoseconds.
		Weight::from_parts(41_396_000, 0)
			.saturating_add(Weight::from_parts(0, 3488))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
